BASE <https://w3id.org/cocoon/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX gr: <http://purl.org/goodrelations/v1#>
PREFIX unit: <http://qudt.org/vocab/unit#>
PREFIX cocoon: <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/ontology_dev/cocoon.ttl>

GENERATE { 
  <data/vm/gcloud/{?name}> a cocoon:VM;
    rdfs:label ?name;
    cocoon:numberOfCores ?cores;
    cocoon:hasCPUcapacity[
        a cocoon:PhysicalQuantity;
            cocoon:numericValue ?gceu;
            cocoon:hasUnitOfMeasurement cocoon:gceu;
    ];
    cocoon:hasMemory [
        a cocoon:PhysicalQuantity;
            cocoon:numericValue ?memory;
            cocoon:hasUnitOfMeasurement cocoon:GB;
    ];
    GENERATE {
        <data/vm/gcloud/{?name}> gr:hasPriceSpecification [ 
            a gr:UnitPriceSpecification ; 
                gr:hasCurrency "USD"^^xsd:string; 
                gr:hasCurrencyValue "{?regionalPrice}"^^xsd:double; 
                cocoon:hasRegion <data/region/gcloud/{?region}>;
                gr:hasUnitOfMeasurement unit:Hour ;
        ] 
    } 
  	ITERATOR iter:JSONPath(?gcloudVM,".price[*]") AS ?price
    WHERE {
        BIND (fun:JSONPath(?price,".price") AS ?regionalPrice)
        BIND (fun:JSONPath(?price,".region") AS ?region)
    }   
  	.
 
}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/data/gcloud_vm.json> AS ?source
ITERATOR iter:JSONPath(?source,"$[*]") AS ?gcloudVM
WHERE {
    BIND (fun:JSONPath(?gcloudVM,".name") AS ?name)
    BIND (fun:JSONPath(?gcloudVM,".cores") AS ?cores)
    BIND (fun:JSONPath(?gcloudVM,".memory") AS ?memory)
    BIND (fun:JSONPath(?gcloudVM,".gceu") AS ?gceu)
}
