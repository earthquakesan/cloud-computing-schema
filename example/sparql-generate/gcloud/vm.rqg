BASE <https://w3id.org/cocoon/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX gr: <http://purl.org/goodrelations/v1#>
PREFIX unit: <http://qudt.org/vocab/unit#>
PREFIX cocoon: <https://w3id.org/cocoon/v1.0#>

GENERATE { 
  <data/vm/gcloud/{?name}> a cocoon:VM;
    rdfs:label ?name;
    cocoon:numberOfCores ?cores;
    cocoon:hasMemory [
        a cocoon:QuantityOfThings;
            cocoon:numericValue ?memory;
            cocoon:hasUnitOfMeasurement cocoon:GB;
    ];
    GENERATE {
        <data/vm/gcloud/{?name}> cocoon:hasMaxStorageSize [
            a cocoon:QuantityOfThings;
                cocoon:numericValue ?maxPdSize;
                cocoon:hasUnitOfMeasurement cocoon:TB;
        ];
    } 
    WHERE {
        FILTER( BOUND(?maxPdSize) )
    } .
    GENERATE {
        <data/vm/gcloud/{?name}> cocoon:hasMaxNumberOfDisk [
            a cocoon:QuantityOfThings;
                cocoon:numericValue ?maxNumberOfPd;
        ];
    } 
    WHERE {
        FILTER( BOUND(?maxNumberOfPd) )
    } .
    GENERATE {
        <data/vm/gcloud/{?name}> cocoon:hasCPUcapacity[
            a cocoon:QuantityOfThings;
                cocoon:numericValue ?gceu;
                cocoon:hasUnitOfMeasurement cocoon:gceu;
        ];
    } 
    WHERE {
        FILTER( BOUND(?gceu) )
    } .
    GENERATE {
        <data/vm/gcloud/{?name}> gr:hasPriceSpecification [ 
            a gr:UnitPriceSpecification ; 
                gr:hasCurrency "USD"^^xsd:string; 
                gr:hasCurrencyValue ?regionalPrice; 
                cocoon:hasRegion <data/region/gcloud/{?region}>;
                gr:hasUnitOfMeasurement unit:Hour ;
        ] 
    } 
  	ITERATOR iter:JSONPath(?gcloudVM,".price[*]") AS ?price
    WHERE {
        BIND ( xsd:double( fun:JSONPath(?price,".price") ) AS ?regionalPrice )
        BIND ( fun:JSONPath(?price,".region") AS ?region )
    }   
  	.
 
}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/vm.json> AS ?source
ITERATOR iter:JSONPath(?source,"$[*]") AS ?gcloudVM
WHERE {
    BIND ( fun:JSONPath(?gcloudVM,".name") AS ?name )
    BIND ( xsd:decimal( fun:JSONPath(?gcloudVM,".cores" ) ) AS ?cores )
    BIND ( xsd:decimal( fun:JSONPath(?gcloudVM,".memory") ) AS ?memory )
    BIND ( xsd:decimal( fun:JSONPath(?gcloudVM,".gceu") ) AS ?gceu )
    BIND ( xsd:nonNegativeInteger ( fun:JSONPath(?gcloudVM,".maxNumberOfPd") ) AS ?maxNumberOfPd )
    BIND ( xsd:nonNegativeInteger ( fun:JSONPath(?gcloudVM,".maxPdSize") ) AS ?maxPdSize )
}
