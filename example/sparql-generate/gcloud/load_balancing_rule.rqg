BASE <https://w3id.org/cocoon/data/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX gr: <http://purl.org/goodrelations/v1#>
PREFIX unit: <http://qudt.org/vocab/unit#>
PREFIX cocoon: <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/ontology_dev/cocoon.ttl>

GENERATE { 
    GENERATE { 
        <network/load_balancing/forwarding_rule/base/gcloud> a cocoon:LBForwardingRule;
        cocoon:hasProvider cocoon:gcloud;
        rdfs:label "Google Lord Balancing Forwarding Rule Base Rate";
        rdfs:comment "Flat rate price, regardless 1 rule or 5 rules used, charged the same per hour.";
        gr:hasPriceSpecification [ 
            a cocoon:NetworkPriceSpecification ; 
                gr:hasCurrency "USD"^^xsd:string; 
                cocoon:hasCurrencyValue ?price; 
                cocoon:hasRegion <region/gcloud/{?region}>;
                gr:hasUnitOfMeasurement unit:Hour;
                cocoon:forUsageMoreThan [
                    a cocoon:QuantityOfThings;
                    cocoon:numericValue "0"^^xsd:nonNegativeInteger;
                ];
                cocoon:forUsageLessEqual [
                    a cocoon:QuantityOfThings;
                    cocoon:numericValue "5"^^xsd:nonNegativeInteger;
                ];  
        ];
        
    }
    ITERATOR iter:JSONListKeys( ?FORWARDING_RULE_CHARGE_BASE ) AS ?region
    WHERE {
        BIND(xsd:float(fun:JSONPath(?FORWARDING_RULE_CHARGE_BASE, "$.{?region}" )) AS ?price)
    } .

    GENERATE { 
        <network/load_balancing/forwarding_rule/extra/gcloud> a cocoon:LBForwardingRule;
        cocoon:hasProvider cocoon:gcloud;
        rdfs:label "Google Lord Balancing Forwarding Rule Extra Rate";
        rdfs:comment "Extra charged per rule per hour.";
        gr:hasPriceSpecification [ 
            a cocoon:NetworkPriceSpecification ; 
                gr:hasCurrency "USD"^^xsd:string; 
                cocoon:hasCurrencyValue ?price; 
                cocoon:hasRegion <region/gcloud/{?region}>;
                gr:hasUnitOfMeasurement unit:Hour;
                cocoon:forUsageMoreThan [
                    a cocoon:QuantityOfThings;
                    cocoon:numericValue "5"^^xsd:nonNegativeInteger;
                ];
        ];
    }
    ITERATOR iter:JSONListKeys( ?FORWARDING_RULE_CHARGE_EXTRA ) AS ?region
    WHERE {
        BIND(xsd:float(fun:JSONPath(?FORWARDING_RULE_CHARGE_EXTRA, "$.{?region}" )) AS ?price)
    } .
}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/load_balancing_rule.json> AS ?source
WHERE {
    BIND(fun:JSONPath(?source, "$.FORWARDING_RULE_CHARGE_BASE" ) AS ?FORWARDING_RULE_CHARGE_BASE)
    BIND(fun:JSONPath(?source, "$.FORWARDING_RULE_CHARGE_EXTRA" ) AS ?FORWARDING_RULE_CHARGE_EXTRA)
}
