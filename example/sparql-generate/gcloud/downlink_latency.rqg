BASE <https://w3id.org/cocoon/data/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cocoon: <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/ontology_dev/cocoon.v1.0.1.ttl>
PREFIX schema: <https://schema.org/>
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX ssn: <http://www.w3.org/ns/ssn/>
PREFIX qudt: <http://qudt.org/1.1/schema/qudt#>
PREFIX qudt-unit: <http://qudt.org/1.1/vocab/unit#>

GENERATE {
    GENERATE {
        <QuanlityOfService/DownlinkSpeed/{?min_size}/{?max_size}/KB> a cocoon:DownlinkSpeed;
            cocoon:transferedFileSizeMin [
                a schema:TypeAndQuantityNode;
                schema:amountOfThisGood ?min_size;
                schema:unitText "KB";
                schema:unitCode "2P";
            ];
            cocoon:transferedFileSizeMax [
                a schema:TypeAndQuantityNode;
                schema:amountOfThisGood ?max_size;
                schema:unitText "KB";
                schema:unitCode "2P";
            ]
    }
    WHERE{
        FILTER (?type = "downlink")
    }.

    <QuanlityOfService/Latency> a cocoon:Latency .
    <QuanlityOfService/DNSQueryLatency> a cocoon:DNSQueryLatency .

    GENERATE {
        <{?type_slug}/ComputeService/gcloud/{?region}/{?zone}/> a cocoon:ComputeService ;
            cocoon:hasProvider cocoon:gcloud;
            ssn:hasProperty ?property_url;
            cocoon:inRegion <region/gcloud/{?region}> ;
            cocoon:inZone ?zone .

        <Measurement/{?type_slug}/ComputeService/gcloud/{?region}/{?zone}/150.203.213.249/lat=-35.271475/long=149.121434/{?completion_time}> a cocoon:Measurement ;
            sosa:madeBySensor <Device/150.203.213.249/lat=-35.271475/long=149.121434> ;
            sosa:hasFeatureOfInterest  <{?type_slug}/ComputeService/gcloud/{?region}/{?zone}/> ;
            sosa:hasResult [
                a qudt:QuantityValue ;
                qudt:numericValue ?average ;
                qudt:unit ?unit ] ;
            sosa:resultTime ?dateTime .
    }
    WHERE{
        FILTER (?service_type = "compute")        
    }.

    GENERATE {
        <{?type_slug}/StorageService/gcloud/{?region}> a cocoon:StorageService ;
            cocoon:hasProvider cocoon:gcloud;
            ssn:hasProperty ?property_url;
            cocoon:inRegion <region/gcloud/{?region}> .

        <Measurement/{?type_slug}/StorageService/gcloud/{?region}/150.203.213.249/lat=-35.271475/long=149.121434/{?completion_time}> a cocoon:Measurement ;
            sosa:madeBySensor <Device/150.203.213.249/lat=-35.271475/long=149.121434> ;
            sosa:hasFeatureOfInterest  <{?type_slug}/StorageService/gcloud/{?region}/> ;
            sosa:hasResult [
                a qudt:QuantityValue ;
                qudt:numericValue ?average ;
                qudt:unit ?unit ] ;
            sosa:resultTime ?dateTime .
    }
    WHERE{
        FILTER (?service_type = "storage")
    }.

    GENERATE {
        <{?type_slug}/DNSService/gcloud/> a  cocoon:CDNService ;
            cocoon:hasProvider cocoon:gcloud;
            ssn:hasProperty ?property_url.

        <Measurement/{?type_slug}/CDNService/gcloud/150.203.213.249/lat=-35.271475/long=149.121434/{?completion_time}> a cocoon:Measurement ;
            sosa:madeBySensor <device/150.203.213.249/lat=-35.271475/long=149.121434> ;
            sosa:hasFeatureOfInterest  <{?type_slug}/CDNService/gcloud> ;
            sosa:hasResult [
                a qudt:QuantityValue ;
                qudt:numericValue ?average ;
                qudt:unit ?unit ] ;
            sosa:resultTime ?dateTime .
    }
    WHERE{
        FILTER (?service_type = "cdn")
    }.

    GENERATE {
        <{?type_slug}/DNSService/gcloud/> a  cocoon:DNSService ;
            cocoon:hasProvider cocoon:gcloud;
            ssn:hasProperty ?property_url.

        <Measurement/{?type_slug}/DNSService/gcloud/150.203.213.249/lat=-35.271475/long=149.121434/{?completion_time}> a cocoon:Measurement ;
            sosa:madeBySensor <device/150.203.213.249/lat=-35.271475/long=149.121434> ;
            sosa:hasFeatureOfInterest  <{?type_slug}/DNSService/gcloud> ;
            sosa:hasResult [
                a qudt:QuantityValue ;
                qudt:numericValue ?average ;
                qudt:unit ?unit ] ;
            sosa:resultTime ?dateTime .
    }
    WHERE{
        FILTER (?service_type = "dns")
    }.

}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/downlink_latency.json> AS ?source
ITERATOR iter:JSONPath(?source,"$[*]") AS ?qos
WHERE {
    BIND( fun:JSONPath(?qos, '$.region' ) AS ?region)
    BIND( fun:JSONPath(?qos, '$.service_type' ) AS ?service_type)
    BIND( fun:JSONPath(?qos, '$.zone' ) AS ?zone)
    BIND( fun:JSONPath(?qos, '$.type' ) AS ?type)
    BIND( xsd:double( fun:JSONPath(?qos, '$.average') ) AS ?average)
    BIND( fun:JSONPath(?qos, '$.completion_time') AS ?completion_time)
    BIND( xsd:dateTime( ?completion_time ) AS ?dateTime)
    BIND( xsd:interger(fun:JSONPath(?qos, '$.min_size')) AS ?min_size)
    BIND( xsd:interger(fun:JSONPath(?qos, '$.max_size')) AS ?max_size)
    BIND ( IF( ?type = "downlink" , qudt-unit:MegabitsPerSecond , qudt-unit:MilliSecond ) AS ?unit )
    BIND (
        COALESCE(
            IF(?type = "downlink", <QuanlityOfService/DownlinkSpeed/{?min_size}/{?max_size}/KB> , 1/0),
            IF(?type = "latency", <QuanlityOfService/Latency>, 1/0),
            <QuanlityOfService/DNSQueryLatency> # assume "dns"
        ) AS ?property_url
    )
    BIND (
        COALESCE(
            IF(?type = "downlink", "DownlinkSpeed" , 1/0),
            IF(?type = "latency", "Latency", 1/0),
            "DNSQueryLatency" # assume "dns"
        ) AS ?type_slug
    )
}
