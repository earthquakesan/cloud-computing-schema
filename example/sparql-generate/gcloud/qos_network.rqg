BASE <https://w3id.org/cocoon/data/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cocoon: <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/ontology_dev/cocoon.v1.0.1.ttl>
PREFIX schema: <https://schema.org/> .
PREFIX sosa: <http://www.w3.org/ns/sosa/> .
@prefix time: <http://www.w3.org/2006/time#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix qudt-1-1: <http://qudt.org/1.1/schema/qudt#> .
@prefix qudt-unit-1-1: <http://qudt.org/1.1/vocab/unit#> .
@prefix cdt: <http://w3id.org/lindt/custom_datatypes#> .

GENERATE {
    <Device/150.203.213.249/lat=-35.271475/long=149.121434> a cocoon:Device ;
        rdfs:label "CECS-030929"@en ;
        rdfs:comment "The computer used to conduct the tests, belongs to Australian National University College of Engineering & Computer Science."@en ;
        cocoon:ipv4 "150.203.213.249";
        cocoon:inPhisicalLocation [
            a schema:Place;
            schema:geo [
                a schema:GeoCoordinates;
                schema:latitude "-35.271475" ;
                schema:longitude "149.121434" ;
                schema:address "Hanna Neumann Building #145, Science Road, Canberra ACT 2601"
            ]
        ] .

    <Measurement/DownlinkSpeed/ComputeService/gcloud/europe-west3/c/150.203.213.249/lat=-35.271475/long=149.121434/2017-06-06T12:36:12Z> rdf:type cocoon:Measurement ;
        sosa:madeBySensor <Device/150.203.213.249/-35.271475/149.121434> ;
        sosa:hasFeatureOfInterest  <ComputeService/gcloud/europe-west3/c/DownlinkSpeed> ;
        sosa:hasSimpleResult "1021.45 hPa"^^cdt:ucum ;
        sosa:resultTime "2017-06-06T12:36:12Z"^^xsd:dateTime .

<ComputeService/gcloud/europe-west3/c/DownlinkSpeed> a sosa:FeatureOfInterest ;
    	ssn:hasProperty cocoon:DownlinkSpeed;

    GENERATE {
             
    }
    ITERATOR iter:JSONPath(?gcloudInternet, "$.destinations[*]") AS ?destinationJson
    WHERE {
        BIND (fun:JSONPath(?destinationJson, "$") AS ?destinationStr)     
    } .
}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/qos_network.json> AS ?source
ITERATOR iter:JSONPath(?source,"$[*]") AS ?qos
WHERE {
    BIND(fun:JSONPath(?qos, '$.region' ) AS ?gcloudInternet)
}
